{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/codefionn/msgtausch/config-schema.json",
  "title": "msgtausch Configuration Schema",
  "description": "JSON Schema for msgtausch proxy server configuration",
  "type": "object",
  "properties": {
    "servers": {
      "type": "array",
      "description": "List of proxy server configurations",
      "items": {
        "$ref": "#/definitions/ServerConfig"
      },
      "minItems": 1
    },
    "timeout-seconds": {
      "type": "integer",
      "description": "Global timeout for all connections in seconds",
      "default": 30,
      "minimum": 1,
      "maximum": 3600
    },
    "max-concurrent-connections": {
      "type": "integer",
      "description": "Global maximum concurrent connections",
      "default": 100,
      "minimum": 1
    },
    "classifiers": {
      "type": "object",
      "description": "Named classifier definitions for traffic matching",
      "additionalProperties": {
        "$ref": "#/definitions/Classifier"
      }
    },
    "forwards": {
      "type": "array",
      "description": "Forwarding rules for different destinations",
      "items": {
        "$ref": "#/definitions/Forward"
      }
    },
    "allowlist": {
      "$ref": "#/definitions/Classifier",
      "description": "Allow only hosts matching this classifier"
    },
    "blocklist": {
      "$ref": "#/definitions/Classifier",
      "description": "Block hosts matching this classifier"
    },
    "interception": {
      "$ref": "#/definitions/InterceptionConfig",
      "description": "Global settings for traffic interception"
    },
    "statistics": {
      "$ref": "#/definitions/StatisticsConfig",
      "description": "Statistics collection configuration"
    },
    "portal": {
      "$ref": "#/definitions/PortalConfig",
      "description": "Portal authentication configuration"
    },
    "listen-address": {
      "type": "string",
      "description": "Backward compatibility: single server listen address",
      "pattern": "^[^:]+:[0-9]+$"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "ServerConfig": {
      "type": "object",
      "description": "Configuration for a single proxy server instance",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of proxy server",
          "enum": ["standard", "http", "https", "quic"],
          "default": "standard"
        },
        "listen-address": {
          "type": "string",
          "description": "Address to listen on (e.g., 127.0.0.1:8080)",
          "pattern": "^[^:]+:[0-9]+$",
          "default": "127.0.0.1:8080"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether this server is enabled",
          "default": true
        },
        "interceptor-name": {
          "type": "string",
          "description": "Identifier for this interceptor (optional)"
        },
        "max-connections": {
          "type": "integer",
          "description": "Maximum connections for this server instance",
          "minimum": 1,
          "default": 100
        },
        "connections-per-client": {
          "type": "integer",
          "description": "Maximum connections per client IP",
          "minimum": 1,
          "default": 10
        }
      },
      "required": ["listen-address"],
      "additionalProperties": false
    },
    "InterceptionConfig": {
      "type": "object",
      "description": "Settings for HTTP/HTTPS traffic interception",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether interception is enabled",
          "default": false
        },
        "http": {
          "type": "boolean",
          "description": "Whether to intercept HTTP traffic",
          "default": false
        },
        "https": {
          "type": "boolean",
          "description": "Whether to intercept HTTPS traffic",
          "default": false
        },
        "insecure-skip-verify": {
          "type": "boolean",
          "description": "Skip TLS verification for upstream connections (useful for interception with self-signed upstreams)",
          "default": false
        },
        "ca-file": {
          "type": "string",
          "description": "Path to CA certificate file (for HTTPS/QUIC interceptor)"
        },
        "ca-key-file": {
          "type": "string",
          "description": "Path to CA private key file (for HTTPS/QUIC interceptor)"
        }
      },
      "additionalProperties": false
    },
    "StatisticsConfig": {
      "type": "object",
      "description": "Configuration for statistics collection",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable statistics collection",
          "default": false
        },
        "backend": {
          "type": "string",
          "description": "Storage backend type",
          "enum": ["sqlite", "postgres", "dummy"],
          "default": "sqlite"
        },
        "sqlite-path": {
          "type": "string",
          "description": "Path to SQLite database file",
          "default": "msgtausch_stats.db"
        },
        "postgres-dsn": {
          "type": "string",
          "description": "PostgreSQL connection string"
        },
        "buffer-size": {
          "type": "integer",
          "description": "Buffer size for batch operations",
          "minimum": 1,
          "default": 1000
        },
        "flush-interval": {
          "type": "integer",
          "description": "Flush interval in seconds",
          "minimum": 1,
          "default": 300
        }
      },
      "additionalProperties": false
    },
    "PortalConfig": {
      "type": "object",
      "description": "Settings for the admin portal",
      "properties": {
        "username": {
          "type": "string",
          "description": "Optional username for portal authentication"
        },
        "password": {
          "type": "string",
          "description": "Optional password for portal authentication"
        }
      },
      "additionalProperties": false
    },
    "Classifier": {
      "type": "object",
      "description": "Traffic classification rules",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of classifier",
          "enum": [
            "and", "or", "not",
            "domain", "ip", "network", "port",
            "domains-file", "ref",
            "true", "false"
          ]
        }
      },
      "required": ["type"],
      "allOf": [
        {
          "if": {
            "properties": { "type": { "const": "and" } }
          },
          "then": {
            "properties": {
              "type": { "const": "and" },
              "classifiers": {
                "type": "array",
                "description": "Array of sub-classifiers that must all match",
                "items": { "$ref": "#/definitions/Classifier" },
                "minItems": 1
              }
            },
            "required": ["classifiers"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "or" } }
          },
          "then": {
            "properties": {
              "type": { "const": "or" },
              "classifiers": {
                "type": "array",
                "description": "Array of sub-classifiers where any must match",
                "items": { "$ref": "#/definitions/Classifier" },
                "minItems": 1
              }
            },
            "required": ["classifiers"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "not" } }
          },
          "then": {
            "properties": {
              "type": { "const": "not" },
              "classifier": {
                "$ref": "#/definitions/Classifier",
                "description": "Sub-classifier to negate"
              }
            },
            "required": ["classifier"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "domain" } }
          },
          "then": {
            "properties": {
              "type": { "const": "domain" },
              "domain": {
                "type": "string",
                "description": "Domain pattern to match"
              },
              "op": {
                "type": "string",
                "description": "Matching operation",
                "enum": ["equal", "not-equal", "is", "contains", "not-contains"],
                "default": "equal"
              }
            },
            "required": ["domain"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "ip" } }
          },
          "then": {
            "properties": {
              "type": { "const": "ip" },
              "ip": {
                "type": "string",
                "description": "Exact IP address to match",
                "anyOf": [
                  { "format": "ipv4" },
                  { "format": "ipv6" }
                ]
              }
            },
            "required": ["ip"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "network" } }
          },
          "then": {
            "properties": {
              "type": { "const": "network" },
              "cidr": {
                "type": "string",
                "description": "CIDR network range (e.g., 192.168.1.0/24)",
                "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$|^([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}/[0-9]{1,3}$"
              }
            },
            "required": ["cidr"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "port" } }
          },
          "then": {
            "properties": {
              "type": { "const": "port" },
              "port": {
                "type": "integer",
                "description": "Port number to match",
                "minimum": 1,
                "maximum": 65535
              }
            },
            "required": ["port"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "domains-file" } }
          },
          "then": {
            "properties": {
              "type": { "const": "domains-file" },
              "file": {
                "type": "string",
                "description": "Path to file containing domain patterns (one per line)"
              }
            },
            "required": ["file"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "ref" } }
          },
          "then": {
            "properties": {
              "type": { "const": "ref" },
              "id": {
                "type": "string",
                "description": "Name of the classifier to reference"
              }
            },
            "required": ["id"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "true" } }
          },
          "then": {
            "properties": {
              "type": { "const": "true" }
            },
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "false" } }
          },
          "then": {
            "properties": {
              "type": { "const": "false" }
            },
            "additionalProperties": false
          }
        }
      ]
    },
    "Forward": {
      "type": "object",
      "description": "Forwarding rule configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of forwarding rule",
          "enum": ["default-network", "socks5", "proxy"]
        },
        "classifier": {
          "$ref": "#/definitions/Classifier",
          "description": "Classifier to determine when this forward applies"
        }
      },
      "required": ["type"],
      "allOf": [
        {
          "if": {
            "properties": { "type": { "const": "default-network" } }
          },
          "then": {
            "properties": {
              "type": { "const": "default-network" },
              "classifier": { "$ref": "#/definitions/Classifier" },
              "force-ipv4": {
                "type": "boolean",
                "description": "Force IPv4 connections",
                "default": false
              }
            },
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "socks5" } }
          },
          "then": {
            "properties": {
              "type": { "const": "socks5" },
              "classifier": { "$ref": "#/definitions/Classifier" },
              "address": {
                "type": "string",
                "description": "SOCKS5 server address (host:port)",
                "pattern": "^[^:]+:[0-9]+$"
              },
              "username": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/Secret" }
                ],
                "description": "Username for authentication (optional)"
              },
              "password": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/Secret" }
                ],
                "description": "Password for authentication (optional)"
              },
              "force-ipv4": {
                "type": "boolean",
                "description": "Force IPv4 connections",
                "default": false
              }
            },
            "required": ["address"],
            "additionalProperties": false
          }
        },
        {
          "if": {
            "properties": { "type": { "const": "proxy" } }
          },
          "then": {
            "properties": {
              "type": { "const": "proxy" },
              "classifier": { "$ref": "#/definitions/Classifier" },
              "address": {
                "type": "string",
                "description": "HTTP proxy address (host:port)",
                "pattern": "^[^:]+:[0-9]+$"
              },
              "username": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/Secret" }
                ],
                "description": "Username for authentication (optional)"
              },
              "password": {
                "oneOf": [
                  { "type": "string" },
                  { "$ref": "#/definitions/Secret" }
                ],
                "description": "Password for authentication (optional)"
              },
              "force-ipv4": {
                "type": "boolean",
                "description": "Force IPv4 connections",
                "default": false
              }
            },
            "required": ["address"],
            "additionalProperties": false
          }
        }
      ]
    },
    "Secret": {
      "type": "object",
      "description": "Secret value retrieved from environment variable",
      "properties": {
        "_secret": {
          "type": "string",
          "description": "Environment variable name containing the secret value"
        }
      },
      "required": ["_secret"],
      "additionalProperties": false
    }
  }
}
